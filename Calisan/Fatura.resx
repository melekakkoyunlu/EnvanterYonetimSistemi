<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_print.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAS3klEQVR4Xu3dS69ddcHH8VMijkDBNMwFXwCkMGrTtVbTlDCTm9GBmBjj1Eg65OpMCPgKjDHcXoDy
        AiQ4wQsmBWc0DgXkoiMxgef579MVn3LOj4dbL+fs3+eTfLOg57LX2gn8dru7z94BttiZMzftzPN9o0dH
        L+xM05/G8fzo3dF/1jb/fH73Y8vy/OiR0b27XwsAHBLTdMcY8KfHqJ8bfTT6ny/Y5mvPje/31Djevn53
        AODAuOuur42RPjv66yiN+Zdvml4fx7M7x49fv94qAHBV3HnnN8YwPz6GefPH+Hm4L32b23ps58SJG9ez
        AACukCM7y/LAGOK3LhrmK9s0vTOOPxnncs2FUwIALp95/tYY399/bIyvbi/vnDp1y3p2AMAlN013j8F9
        b88AH4T+NfruepYAwCVyzRjYX1w0uAezzSsGPCUAAJfA/fd/dff1+WlwD2LT9NzOsWPXrmcPAHxum/Gf
        phfj0B7sfutBAAB8MUfG+P86jOvhaPOnFp4OAIDP6TA85//pPbleDQDwqabp/jCmh7Np+t56VQDAJ9q8
        pn6e3983pIe393dOn755vToAINg873+QfsjPpeql3WsDAIJ5/tGe4dymfrBeJQDwX5s39pnnt/eM5vY0
        TW+O4w3r1QIAu5blZ/tGc9talkfWqwUA1vfzv5Jv6Xt12ryD4PHj169XDQDl5vnsvrHc1pblwfWqAaDc
        PJ/bN5Tb2jS9vl41ABSbpjviUG5zJ0/etl49AJRalqfjSG53fkQwAOXm+bU949jQq+vVA0ChM2duGmP4
        0Z5xbGhzzUfXewEAyszzfReNYlfLcs96LwBAmXl+bN8wtjRND6/3AgCUmecX9g1jT8+u9wIAlJnnP+4Z
        xaZeWe8FACgzz3/bM4pNnV/vBQAos/nZ+HkcG3p7vRcAoMw0fRCGsaV/r/cCAJTJw9gTAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRK
        o9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUAFRKo9gUsMXO
        nLlp/Id+3+jR0Qs70/SncTw/enf0n1H+H4MkSdvdZgM3W3h+dxuX5fnRI6N7d7fzUJqmO8YFPD0u6tzo
        o1G6cEmSlNts57mxp0+N4+3ruh5Qd931tXGSZ0d/HaWLkSRJX6Rpen0cz+4cP379uroHwJ13fmOc2OPj
        xDZ/jJFPXJIkXYo2W/vYzokTN64rfFUc2VmWB8aJvHXRiUmSpMvdNL0zjj8ZW3zNhUm+Uub5W+PGf/+x
        k5EkSVe6l3dOnbplXefLbJruHjf43p4TkCRJV6d/jb67rvRlcc24gV9cdIOSJOmgtHnFwCV/SuD++7+6
        +/rEdIOSJOlgNE3P7Rw7du263l/SZvyn6cV4Q5Ik6aD120vxIODIGP9fh28uSZIOaps/tf9STwd4zl+S
        pMPak+uaf07TdH/4ZpIk6bA0Td9bV/0z2rymcJ7f3/eNJEnSYer9ndOnb17X/VNtnvf3Q34kSdqOXtrd
        9k81zz/a84WSJOlw94N15T/B5o195vntPV8kSZIOc9P05jjesK59sCw/2/dFkiTp8Lcsj6xrv8eF9/P3
        lr6SJG1jm3cQPH78+nX1LzLPZ/d9siRJ2p6W5cF19S8yz+f2faIkSdqepun1dfVX03RH/ERJkrRdnTx5
        27r+w7I8HT9JkiRtWxf9iOB5fm3PByVJ0nb26oXxP3PmpvEvH+35oCRJ2s42m39087v/+y76RUmStO0t
        yz2bBwCP7fuAJEna3qbp4c0DgBf2fUCSJG1zz24eAPxxzy9KkqTt7pXNA4C/7flFSZK03Z3f/BCgd8IH
        JEnS9vb25gHAB+EDkiRpe/u3BwCSJPW1+wDAUwCSJHX1tr8EKElSX+e9DFCSpL5e2bwT4PPhA5IkaXt7
        ZvMnAI/u+UVJkrTdPbT5E4B7wwckSdK2Nk13eztgSZKamqYPx/Hozq55PvexD0qSpG3tzxfGf2NZng6f
        IEmStq1leWJd/2Geb9/3CZIkaRu7dV3/lacBJEna7qbp9XX1LzLPZ/d9oiRJ2p6W5cF19S9y/Pj144Pv
        7vtkSZJ0+Nu8989m66Npejx+kSRJOtxN08Pr2gcnTtw4PumtfV8kSZIOc3/fOX366+vaf4Jl+WH4QkmS
        dFibpu+vK///OjI++eV9XyxJkg5f0/S73W3/TE6dumV80fv7vokkSTpMvbdz+vTN67p/RvN8355vIkmS
        DlPLcs+66p/TND0Vv6EkSTrYTdPP1zX/QjZ/H+BX+76pJEk6uE3Tc2PDr7kw5V/UsWPXjm/0YrwBSZJ0
        0PrN7nZfEvP8lfEg4Jd7bkCSJB2snrl04/9/Nk8HPLnnhiRJ0tXvo/U5/8/4cr8vYp6/PfKeAZIkHYSm
        6Z87y/KddaUvs81rCuf5pX0nIUmSrlybH/Jz8uQ313W+Yo6MRxwPjBt/M56UJEm6PG3e2W9Zfry7xVfN
        PN8wTuKR3ZNJJylJki5V/xh7+/Cnv7HPlTTP140HAg+O42sXnagkSfrynRvD/9NxvG5d3QPq5Mnbxklu
        XjHwl3HCH64nL0mSPksXtvPV8RvrJ8bx1nVdD5l5Pjou4J5xfGhc0HPj+IdxfGP0zuiD8e/54iVJ2uY2
        G3hhC98Y//6H0bOjzVbePY5H1xUFtlL6n0JTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFAp
        jWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFApjWJTAFBpmj6Iw9jRv9d7AQDKTNM7YRhbenu9FwCg
        zDz/bc8oNnV+vRcAoMw8/3HPKDb1ynovAECZZXk+DGNLz6z3AgCUmedH94xiUw+t9wIAlFmWe8MwdjRN
        d6/3AgCUOXPmpjGGH+0bx21vmj4cx6PrvQAAheb53MfGsaM/r1cPAKWW5ekwkNvdsjyxXj0AlJrn2/cN
        5PZ363r1AFCs6WmAaXp9vWoAKDfPZ/cN5ba2LA+uVw0A5Y4fv36M47v7xnLb2rz3weZaAYDVND0eR3Ob
        mqaH16sFAHadOHHjGMm39o3m9vT3ndOnv75eLQDwX8vywzCc29E0fX+9SgBgjyNjLF/eN56HvWn63e61
        AQCf4NSpW8Zovr9vRA9v7+2cPn3zenUAwCea5/v2jOjhbVnuWa8KAPhU0/RUHNTD1DT9fL0aAOAz2vx9
        gF/tG9XD0jQ9N67hmguXAgB8dseOXTuG9MU4sAe73+yeOwDwBc3zV8aDgF/uGdiD3DPGHwAujc3TAU/u
        GdqD1kfrc/5e7gcAl9Q8f3t08N4zYJr+ubMs31nPEgC45DavqZ/nl/aN8NVq80N+Tp785np2AMBldGT8
        jvuBMb5vxlG+Em3e2W9Zfrx7LgDAFTTPN4wRfmR3jNNIX57+MW7vYW/sAwBX2zxfNx4IPDiOr1001Je6
        c2P4fzqO1623CgAcGCdP3jZGevOKgb+Mwf5wHe/P34WvfXU8sHhiHG9dvzsAcODN89Ex4PeM40Nj0J8b
        xz+M4xujd0YfrG3++Y3dj83zs+vn3j2OR9fvAmydnZ3/BXa+MDjFobxDAAAAAElFTkSuQmCC
</value>
  </data>
</root>