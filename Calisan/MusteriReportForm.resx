<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>